# Generated by Django 4.0.1 on 2023-06-24 04:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import userapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('birth', models.IntegerField(max_length=4)),
                ('gender', models.CharField(max_length=20)),
                ('nickname', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', userapp.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Foodinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foodname', models.CharField(max_length=20)),
                ('kcal', models.FloatField()),
                ('carbohydrate', models.FloatField()),
                ('protein', models.FloatField()),
                ('fat', models.FloatField()),
                ('sodium', models.FloatField()),
                ('sugar', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_min', models.IntegerField()),
                ('age_max', models.IntegerField()),
                ('gender', models.CharField(max_length=20)),
                ('kcal_min', models.IntegerField()),
                ('kcal_max', models.IntegerField()),
                ('carbohydrate_min', models.IntegerField()),
                ('carbohydrate_max', models.IntegerField()),
                ('protein_min', models.IntegerField()),
                ('protein_max', models.IntegerField()),
                ('fat_min', models.IntegerField()),
                ('fat_max', models.IntegerField()),
                ('sodium', models.IntegerField()),
                ('sugar', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kcal', models.IntegerField()),
                ('carbohydrate', models.IntegerField()),
                ('protein', models.IntegerField()),
                ('fat', models.IntegerField()),
                ('sodium', models.IntegerField()),
                ('sugar', models.IntegerField()),
                ('date', models.DateField(auto_now=True)),
                ('nickname', models.ForeignKey(db_column='nickname', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('nickname', models.ForeignKey(db_column='nickname', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
